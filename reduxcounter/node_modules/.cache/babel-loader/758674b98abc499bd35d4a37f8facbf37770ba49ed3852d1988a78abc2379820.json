{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport redux from 'redux';\nimport { createStore } from 'redux';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: 'counter',\n  initialState\n});\nconst CounterReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'inc':\n      // If `amount` is provided, add it; otherwise, increment by 1\n      return {\n        counter: state.counter + (action.amount || 1),\n        showCounter: state.showCounter\n      };\n    case 'dec':\n      return {\n        counter: state.counter - 1,\n        showCounter: state.showCounter\n      };\n    case 'toggle':\n      return {\n        counter: state.counter,\n        showCounter: !state.showCounter\n      };\n    default:\n      return state;\n  }\n};\n_c = CounterReducer;\nconst store = createStore(CounterReducer);\nconst counterSubscriber = () => {\n  const latestStore = store.getState();\n};\nstore.subscribe(counterSubscriber);\nexport default store;\nvar _c;\n$RefreshReg$(_c, \"CounterReducer\");","map":{"version":3,"names":["createSlice","redux","createStore","initialState","counter","showCounter","counterSlice","name","CounterReducer","state","action","type","amount","_c","store","counterSubscriber","latestStore","getState","subscribe","$RefreshReg$"],"sources":["D:/React Porjects/reactprac/reduxcounter/src/store/index.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport redux from 'redux'\r\nimport { createStore } from 'redux'\r\n\r\nconst initialState={counter:0 ,showCounter:true}\r\n\r\nconst counterSlice =createSlice({\r\n    name:'counter',\r\n    initialState\r\n})\r\nconst CounterReducer =(state=initialState,action)=>{\r\n    switch (action.type) {\r\n        case 'inc': \r\n          // If `amount` is provided, add it; otherwise, increment by 1\r\n          return {\r\n            counter: state.counter + (action.amount || 1),\r\n            showCounter:state.showCounter\r\n          };\r\n        case 'dec':\r\n          return {\r\n            counter: state.counter - 1,\r\n            showCounter:state.showCounter\r\n          };\r\n          case 'toggle':\r\n          return {\r\n            counter: state.counter,\r\n            showCounter:!state.showCounter\r\n          };\r\n        default:\r\n          return state;\r\n      }\r\n}\r\n\r\nconst store=createStore(CounterReducer)\r\n\r\nconst counterSubscriber= ()=>{\r\n    const latestStore = store.getState()\r\n\r\n}\r\nstore.subscribe(counterSubscriber)\r\nexport default store"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,WAAW,QAAQ,OAAO;AAEnC,MAAMC,YAAY,GAAC;EAACC,OAAO,EAAC,CAAC;EAAEC,WAAW,EAAC;AAAI,CAAC;AAEhD,MAAMC,YAAY,GAAEN,WAAW,CAAC;EAC5BO,IAAI,EAAC,SAAS;EACdJ;AACJ,CAAC,CAAC;AACF,MAAMK,cAAc,GAAEA,CAACC,KAAK,GAACN,YAAY,EAACO,MAAM,KAAG;EAC/C,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,KAAK;MACR;MACA,OAAO;QACLP,OAAO,EAAEK,KAAK,CAACL,OAAO,IAAIM,MAAM,CAACE,MAAM,IAAI,CAAC,CAAC;QAC7CP,WAAW,EAACI,KAAK,CAACJ;MACpB,CAAC;IACH,KAAK,KAAK;MACR,OAAO;QACLD,OAAO,EAAEK,KAAK,CAACL,OAAO,GAAG,CAAC;QAC1BC,WAAW,EAACI,KAAK,CAACJ;MACpB,CAAC;IACD,KAAK,QAAQ;MACb,OAAO;QACLD,OAAO,EAAEK,KAAK,CAACL,OAAO;QACtBC,WAAW,EAAC,CAACI,KAAK,CAACJ;MACrB,CAAC;IACH;MACE,OAAOI,KAAK;EAChB;AACN,CAAC;AAAAI,EAAA,GArBKL,cAAc;AAuBpB,MAAMM,KAAK,GAACZ,WAAW,CAACM,cAAc,CAAC;AAEvC,MAAMO,iBAAiB,GAAEA,CAAA,KAAI;EACzB,MAAMC,WAAW,GAAGF,KAAK,CAACG,QAAQ,CAAC,CAAC;AAExC,CAAC;AACDH,KAAK,CAACI,SAAS,CAACH,iBAAiB,CAAC;AAClC,eAAeD,KAAK;AAAA,IAAAD,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}